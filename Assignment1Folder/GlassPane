import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Container;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.AbstractButton;
import javax.swing.JFrame;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

public class GlassPane extends JPanel implements MouseListener,MouseMotionListener {

Point point;
ArrayList<Point> pointList;
//Container container;


public GlassPane(Container cPane) {
	point=null;  
	pointList = new ArrayList<Point>();
	MListener listener = new MListener(this,cPane);
	this.addMouseListener(this);
	this.addMouseMotionListener(this);

}

public void setPoint(Point p) {
    point = p;
}

@Override
public void paint(Graphics g) {
	g.setColor(Color.red);
	Graphics2D g2=(Graphics2D)g;
	g2.setStroke(new BasicStroke(2));
		if(point!=null)
			{
			for(int i=0;i<(pointList.size()-1);i++)
				{
					g.drawLine(pointList.get(i).x,pointList.get(i).y,pointList.get(i+1).x,pointList.get(i+1).y);
				}
			}
}

@Override
public void mouseClicked(MouseEvent arg0) {}

@Override
public void mouseEntered(MouseEvent arg0) {}

@Override
public void mouseExited(MouseEvent arg0) {
	
}

@Override
	public void mousePressed(MouseEvent e) {
		if(SwingUtilities.isRightMouseButton(e))
		{
			pointList.clear();
			repaint();
		}
		else
		{
			point=e.getPoint();
			pointList.add(point);
		}
	}

@Override
	public void mouseReleased(MouseEvent e) {
		point=null;
	}

@Override
	public void mouseDragged(MouseEvent e) {
		point=e.getPoint();
		pointList.add(point);
		repaint();
	}

@Override
public void mouseMoved(MouseEvent arg0) {}
}


